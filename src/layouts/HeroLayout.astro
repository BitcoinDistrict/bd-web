---
/**
 * HeroLayout - Layout component with full-viewport hero image support
 * 
 * This layout provides a clean way to add hero images that cover the entire viewport
 * to any page. Perfect for landing pages and pages that need visual impact.
 * 
 * Usage examples:
 * 
 * 1. Basic hero with default image:
 *    <HeroLayout metadata={metadata} />
 * 
 * 2. Custom hero image:
 *    <HeroLayout metadata={metadata} hero={{ image: '~/assets/images/my-hero.jpg' }} />
 * 
 * 3. Full hero configuration:
 *    <HeroLayout metadata={metadata} hero={{
 *      image: '~/assets/images/hero.jpg',
 *      title: 'Welcome to Bitcoin District',
 *      subtitle: 'Your local Bitcoin community',
 *      opacity: 'opacity-20 dark:opacity-25'
 *    }} />
 * 
 * 4. Using utility functions for consistency:
 *    import { createHero, HERO_IMAGES } from '~/utils/hero';
 *    const hero = createHero({ image: HERO_IMAGES.events, title: 'Events' });
 *    <HeroLayout metadata={metadata} hero={hero} />
 * 
 * 5. With text scroll indicator:
 *    <HeroLayout metadata={metadata} hero={hero} 
 *      scrollIndicator={{ text: 'Discover more', variant: 'both', color: 'accent' }} />
 * 
 * 6. Disable scroll indicator:
 *    <HeroLayout metadata={metadata} hero={hero} showScrollIndicator={false} />
 * 
 * 7. Control background behind scrolling content (below hero):
 *    - Default: solid theme-aware background
 *    - Transparent: show hero image behind content as you scroll
 *    - Adjustable opacity via Tailwind opacity utility class (e.g., 'opacity-90')
 * 
 *    Examples:
 *    <HeroLayout metadata={metadata} hero={hero} contentBackground={{ type: 'transparent' }} />
 *    <HeroLayout metadata={metadata} hero={hero} contentBackground={{ type: 'solid', opacityClass: 'opacity-90' }} />
 */
import Layout from '~/layouts/Layout.astro';
import Header from '~/components/widgets/Header.astro';
import Footer from '~/components/widgets/Footer.astro';
import Hero from '~/components/widgets/Hero.astro';
import Image from '~/components/common/Image.astro';
import ScrollIndicator from '~/components/ui/ScrollIndicator.astro';

import { headerData, footerData } from '~/navigation';

import type { MetaData } from '~/types';

export interface Props {
  metadata?: MetaData;
  hero?: {
    image?: string;
    alt?: string;
    opacity?: string;
    title?: string;
    subtitle?: string;
    tagline?: string;
    actions?: any[];
    content?: string;
  };
  showScrollIndicator?: boolean;
  scrollIndicator?: {
    text?: string;
    variant?: 'arrow' | 'text' | 'both';
    position?: 'center' | 'left' | 'right';
    color?: 'light' | 'dark' | 'accent';
    size?: 'sm' | 'md' | 'lg';
  };
  contentBackground?: {
    /**
     * 'solid' renders a theme-aware background behind the scrolling content.
     * 'transparent' keeps the area transparent so the hero background remains visible.
     */
    type?: 'solid' | 'transparent';
    /**
     * Optional Tailwind opacity utility class for the solid background overlay, e.g. 'opacity-90'.
     * Ignored when type is 'transparent'. Defaults to fully opaque.
     */
    opacityClass?: string;
  };
}

const { metadata, hero, showScrollIndicator = true, scrollIndicator = {}, contentBackground } = Astro.props as Props;

// Default hero configuration
const defaultHero = {
  image: '~/assets/images/hero.jpg',
  alt: 'Hero Background',
  opacity: 'opacity-15 dark:opacity-30',
};

const heroConfig = { ...defaultHero, ...hero };

// Background behind the scrolling content area (below the hero)
const contentBgConfig = {
  type: contentBackground?.type ?? 'solid',
  opacityClass: contentBackground?.opacityClass ?? 'opacity-100',
};
---

<Layout metadata={metadata}>
  <!-- Global fixed background image so it appears behind the entire page (including footer) -->
  <div class="fixed inset-0 z-[-1]">
    <Image
      src={heroConfig.image}
      alt={heroConfig.alt}
      class={`object-cover w-full h-full ${heroConfig.opacity}`}
      widths={[400, 768, 1024, 1920, 2560]}
      sizes="100vw"
      loading="eager"
      width={1920}
      height={1080}
    />
  </div>

  <slot name="header">
    <Header {...headerData} isSticky showRssFeed showToggleTheme />
  </slot>
  
  <main>
    <!-- Hero Section (background provided globally above) -->
    <div class="min-h-screen flex flex-col justify-start pt-4 sm:pt-14 md:pt-16 lg:pt-18 xl:pt-18 relative">
      <Hero
        tagline={heroConfig.tagline}
        title={heroConfig.title}
        subtitle={heroConfig.subtitle}
        content={heroConfig.content}
        actions={heroConfig.actions}
      >
        <!-- No per-hero background; using global fixed image above -->
      </Hero>

      <!-- Additional content slot for widgets like BitcoinStats -->
      <slot name="hero-bottom" />
      
      <!-- Scroll Indicator -->
      {showScrollIndicator && (
        <ScrollIndicator
          text={scrollIndicator.text}
          variant={scrollIndicator.variant}
          position={scrollIndicator.position}
          color={scrollIndicator.color}
          size={scrollIndicator.size}
        />
      )}
    </div>

    <!-- Main content area with optional theme-aware background overlay -->
    <div class="relative">
      {contentBgConfig.type === 'solid' && (
        <div aria-hidden class={`absolute inset-0 bg-page ${contentBgConfig.opacityClass} z-0`}></div>
      )}
      <div class="relative z-10">
        <slot />
      </div>
    </div>
  </main>
  
  <slot name="footer">
    <Footer {...footerData} />
  </slot>
</Layout>